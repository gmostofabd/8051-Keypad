	ORG 	00H

	MOV 	DPTR,#LUT 	; MOVES START ADDR OF LUT TO DPTR
	MOV 	A,#11111111B 	; LOADS A WITH ALL 1'S
	MOV 	P2,#00000000B 	; INITIALIZES P0 AS OUTPUT PORT

BACK:	MOV 	P1,#11111111B 	; LOADS P1 WITH ALL 1'S
     	CLR 	P1.0  		; MAKES ROW 1 LOW
     	JB 	P1.4,NEXT1  	; CHECKS WHETHER COLUMN 1 IS LOW AND JUMPS TO NEXT1 IF NOT LOW
     	MOV 	A,#0D   	; LOADS A WITH 0D IF COL IS LOW (THAT MEANS KEY 1 IS PRESSED)
     	ACALL 	DISPLAY  	; CALLS DISPLAY SUBROUTINE
NEXT1:	JB 	P1.5,NEXT2 	; CHECKS WHETHER COLUMN 2 IS LOW AND SO ON...
      	MOV 	A,#1D
      	ACALL 	DISPLAY
NEXT2:	JB 	P1.6,NEXT3
      	MOV 	A,#2D
      	ACALL 	DISPLAY
NEXT3:	JB 	P1.7,NEXT4
      	MOV 	A,#3D
      	ACALL 	DISPLAY
NEXT4:	SETB 	P1.0
      	CLR 	P1.1
      	JB 	P1.4,NEXT5
      	MOV 	A,#4D
      	ACALL 	DISPLAY
NEXT5:	JB 	P1.5,NEXT6
      	MOV 	A,#5D
      	ACALL 	DISPLAY
NEXT6:	JB 	P1.6,NEXT7
      	MOV 	A,#6D
      	ACALL 	DISPLAY
NEXT7:	JB 	P1.7,NEXT8
      	MOV 	A,#7D
      	ACALL DISPLAY
NEXT8:	SETB 	P1.1
      	CLR 	P1.2
      	JB 	P1.4,NEXT9
      	MOV 	A,#8D
      	ACALL 	DISPLAY
NEXT9:	JB 	P1.5,NEXT10
      	MOV 	A,#9D
      	ACALL 	DISPLAY
NEXT10:	JB 	P1.6,NEXT11
       	MOV 	A,#10D
       	ACALL 	DISPLAY
NEXT11:	JB 	P1.7,NEXT12
       	MOV 	A,#11D
       	ACALL 	DISPLAY
NEXT12:	SETB 	P1.2
       	CLR 	P1.3
       	JB 	P1.4,NEXT13
       	MOV 	A,#12D
       	ACALL 	DISPLAY
NEXT13:	JB 	P1.5,NEXT14
       	MOV 	A,#13D
       	ACALL 	DISPLAY
NEXT14:	JB 	P1.6,NEXT15
       	MOV 	A,#14D
       	ACALL 	DISPLAY
NEXT15:	JB 	P1.7,BACK
       	MOV 	A,#15D
       	ACALL 	DISPLAY
       	LJMP 	BACK

DISPLAY:MOVC 	A,@A+DPTR 	; GETS DIGIT DRIVE PATTERN FOR THE CURRENT KEY FROM LUT
        MOV 	P2,A       	; PUTS CORRESPONDING DIGIT DRIVE PATTERN INTO P0
        RET

LUT: 
DB 3FH, 06H, 5BH, 4FH, 66H, 6DH, 7DH, 07H, 7FH, 6FH,0F7H,0FCH,0B9H,0DEH,0F9H,0F1H,0  
;00000000

     END